/**
 * MEF LSO Sonata
 *  A set of APIs based on the LSO Reference Architecture for Serviceability (Address Validation, Site Queries, Product Offering Qualification) | Quoting | Product Inventory | Ordering | Trouble-ticketing Billing | Contract & Catalog
 *
 * OpenAPI spec version: 3.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.server.models

/**
 * An enumeration of the entities that are part of this order expressed in terms of a Product Offering or a Product (for a change order).
 * @param @schemaLocation Target a description file of productOrder extension
 * @param @type Type of productOrder
 * @param action
 * @param billingAccount
 * @param id Identifier of the line item (generally it is a sequence number 01, 02, 03, ...)
 * @param orderItemPrice
 * @param orderItemRelationship
 * @param pricingMethod
 * @param pricingReference The identifier references the previously agreed upon pricing terms, as applicable, based on the pricingMethod (e.g. a contract id or tariff id.
 * @param pricingTerm The length of the contract in months
 * @param product
 * @param productOffering
 * @param qualification
 * @param quote
 * @param relatedParty
 * @param state
 * @param stateChange
 */
data class OrderItem(
        val action: ProductActionType,
        /* Identifier of the line item (generally it is a sequence number 01, 02, 03, ...) */
        val id: kotlin.String,
        val state: ProductOrderItemStateType,
        /* Target a description file of productOrder extension */
        val schemaLocation: kotlin.String? = null,
        /* Type of productOrder */
        val type: kotlin.String? = null,
        val billingAccount: BillingAccountRef? = null,
        val orderItemPrice: kotlin.Array<OrderItemPrice>? = null,
        val orderItemRelationship: kotlin.Array<OrderItemRelationShip>? = null,
        val pricingMethod: PricingMethod? = null,
        /* The identifier references the previously agreed upon pricing terms, as applicable, based on the pricingMethod (e.g. a contract id or tariff id. */
        val pricingReference: kotlin.String? = null,
        /* The length of the contract in months */
        val pricingTerm: kotlin.Int? = null,
        val product: Product? = null,
        val productOffering: ProductOfferingRef? = null,
        val qualification: QualificationRef? = null,
        val quote: QuoteRef? = null,
        val relatedParty: kotlin.Array<RelatedParty>? = null,
        val stateChange: kotlin.Array<StateChange>? = null
) {

}


/**
 * MEF LSO Sonata
 *  A set of APIs based on the LSO Reference Architecture for Serviceability (Address Validation, Site Queries, Product Offering Qualification) | Quoting | Product Inventory | Ordering | Trouble-ticketing Billing | Contract & Catalog
 *
 * OpenAPI spec version: 3.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.server.models

/**
 * An individual article included in a POQ that describes a Product of a particular type (Product Offering) being delivered to a specific geographical location.  The objective is to determine if it is feasible for the Seller to deliver this item as described and for the Seller to inform the Buyer of the estimated time interval to complete this delivery.
 * @param @type When sub-classing, this defines the sub-class entity name
 * @param action
 * @param alternateProductProposal
 * @param eligibleProductOffering
 * @param guaranteedUntilDate Date until seller is guaranted the qualification result.
 * @param id Id of this POQ item
 * @param installationInterval
 * @param product
 * @param productOffering
 * @param productOfferingQualificationItemRelationship
 * @param relatedParty
 * @param serviceConfidenceReason A description of the reason a particular color is being provided. This may include a specific standard reason codes and descriptions.
 * @param serviceabilityConfidence
 * @param state
 * @param stateChange
 * @param terminationError
 */
data class ProductOfferingQualificationItem(
        val action: ProductActionType,
        /* Id of this POQ item */
        val id: kotlin.String,
        val state: ProductOfferingQualificationItemStateType,
        /* When sub-classing, this defines the sub-class entity name */
        val type: kotlin.String? = null,
        val alternateProductProposal: kotlin.Array<AlternateProductProposal>? = null,
        val eligibleProductOffering: kotlin.Array<ProductOfferingRef>? = null,
        /* Date until seller is guaranted the qualification result. */
        val guaranteedUntilDate: java.time.LocalDateTime? = null,
        val installationInterval: TimeInterval? = null,
        val product: Product? = null,
        val productOffering: ProductOfferingRef? = null,
        val productOfferingQualificationItemRelationship: kotlin.Array<ProductOfferingQualificationItemRelationship>? = null,
        val relatedParty: kotlin.Array<RelatedParty>? = null,
        /* A description of the reason a particular color is being provided. This may include a specific standard reason codes and descriptions. */
        val serviceConfidenceReason: kotlin.String? = null,
        val serviceabilityConfidence: ServiceabilityColor? = null,
        val stateChange: kotlin.Array<StateChange>? = null,
        val terminationError: kotlin.Array<TerminationError>? = null
) {

}


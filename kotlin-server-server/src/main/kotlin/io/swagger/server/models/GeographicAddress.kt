/**
 * MEF LSO Sonata
 *  A set of APIs based on the LSO Reference Architecture for Serviceability (Address Validation, Site Queries, Product Offering Qualification) | Quoting | Product Inventory | Ordering | Trouble-ticketing Billing | Contract & Catalog
 *
 * OpenAPI spec version: 3.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.server.models

/**
 * An address is a structured textual way of describing how to find a Property in an urban area (country properties are often defined differently)
 * @param @schemaLocation Technical attribute to extend this class
 * @param @type Technical attribute to extend this class
 * @param allowsNewSite This attribute specifies if a Buyer must use one of the known existing Service Sites at this location for any Products delivered to this Address.  For example, if a particular building owner mandated that all interconnects be done in a shared Public Meet-Me-Room, this attribute would be set to False for that Address.
 * @param fieldedAddress
 * @param formattedAddress
 * @param geographicLocation
 * @param hasPublicSite This attribute specifies if that Address contains Service Sites that are public such as Meet-Me-Rooms at an interconnect location or a shared telecom room in the basement of a multi-tenant building.
 * @param id Unique identifier of the address
 * @param referencedAddress
 */
data class GeographicAddress(
        /* Technical attribute to extend this class */
        val schemaLocation: kotlin.String? = null,
        /* Technical attribute to extend this class */
        val type: kotlin.String? = null,
        /* This attribute specifies if a Buyer must use one of the known existing Service Sites at this location for any Products delivered to this Address.  For example, if a particular building owner mandated that all interconnects be done in a shared Public Meet-Me-Room, this attribute would be set to False for that Address. */
        val allowsNewSite: kotlin.Boolean? = null,
        val fieldedAddress: FieldedAddress? = null,
        val formattedAddress: FormattedAddress? = null,
        val geographicLocation: GeographicLocation? = null,
        /* This attribute specifies if that Address contains Service Sites that are public such as Meet-Me-Rooms at an interconnect location or a shared telecom room in the basement of a multi-tenant building. */
        val hasPublicSite: kotlin.Boolean? = null,
        /* Unique identifier of the address */
        val id: kotlin.String? = null,
        val referencedAddress: ReferencedAddress? = null
) {

}


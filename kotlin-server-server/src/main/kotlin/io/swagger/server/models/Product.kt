/**
 * MEF LSO Sonata
 *  A set of APIs based on the LSO Reference Architecture for Serviceability (Address Validation, Site Queries, Product Offering Qualification) | Quoting | Product Inventory | Ordering | Trouble-ticketing Billing | Contract & Catalog
 *
 * OpenAPI spec version: 3.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.server.models

/**
 * One or more services sold to a Buyer by a Seller.  A particular Product Offering defines the technical and commercial attributes and behav-iors of a Product.
 * @param @baseType the Base Type of the product if specialization. This is a technical attribute to extend this class.
 * @param @schemaLocation A pointer to a file describing extension attributes (if used). This is a technical attribute to extend this class.
 * @param @type The type of product if specialization
 * @param agreement
 * @param billingAccount
 * @param buyerProductId This identifier is optionally provided during the Product ordering and stored for informative purpose in the Seller inventory.
 * @param href Reference of the product (link)
 * @param id Unique identifier of the product in the product domain.
 * @param lastUpdateDate Latest date when the product has been updated
 * @param productOffering
 * @param productOrder
 * @param productPrice
 * @param productRelationship
 * @param productSpecification
 * @param productTerm
 * @param relatedParty
 * @param site
 * @param startDate Start date is when the product is active for the first time (when the install in the product order has been processed).
 * @param status
 * @param statusChange
 * @param terminationDate Termination date (commercial) is when the product has been terminated (when the disconnect in the product order has been processed).
 */
data class Product(
        /* Unique identifier of the product in the product domain. */
        val id: kotlin.String,
        /* Start date is when the product is active for the first time (when the install in the product order has been processed). */
        val startDate: java.time.LocalDateTime,
        val status: ProductStatus,
        /* the Base Type of the product if specialization. This is a technical attribute to extend this class. */
        val baseType: kotlin.String? = null,
        /* A pointer to a file describing extension attributes (if used). This is a technical attribute to extend this class. */
        val schemaLocation: kotlin.String? = null,
        /* The type of product if specialization */
        val type: kotlin.String? = null,
        val agreement: kotlin.Array<Agreement>? = null,
        val billingAccount: kotlin.Array<BillingAccountRef>? = null,
        /* This identifier is optionally provided during the Product ordering and stored for informative purpose in the Seller inventory. */
        val buyerProductId: kotlin.String? = null,
        /* Reference of the product (link) */
        val href: kotlin.String? = null,
        /* Latest date when the product has been updated */
        val lastUpdateDate: java.time.LocalDateTime? = null,
        val productOffering: ProductOfferingRef? = null,
        val productOrder: kotlin.Array<ProductOrderRef>? = null,
        val productPrice: kotlin.Array<ProductPrice>? = null,
        val productRelationship: kotlin.Array<ProductRelationship>? = null,
        val productSpecification: ProductSpecificationRef? = null,
        val productTerm: kotlin.Array<ProductTerm>? = null,
        val relatedParty: kotlin.Array<RelatedParty>? = null,
        val site: kotlin.Array<GeographicSite>? = null,
        val statusChange: kotlin.Array<StatusChange>? = null,
        /* Termination date (commercial) is when the product has been terminated (when the disconnect in the product order has been processed). */
        val terminationDate: java.time.LocalDateTime? = null
) {

}


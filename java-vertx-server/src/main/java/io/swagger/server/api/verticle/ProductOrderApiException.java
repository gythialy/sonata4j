package io.swagger.server.api.verticle;

import io.swagger.server.api.model.ErrorRepresentation;
import io.swagger.server.api.MainApiException;
import java.time.OffsetDateTime;
import io.swagger.server.api.model.ProductOrder;
import io.swagger.server.api.model.ProductOrderCreate;
import io.swagger.server.api.model.ProductOrderSummary;

public final class ProductOrderApiException extends MainApiException {
    public ProductOrderApiException(int statusCode, String statusMessage) {
        super(statusCode, statusMessage);
    }
    
    public static final ProductOrderApiException ProductOrder_productOrderCreate_400_Exception = new ProductOrderApiException(400, "Bad Request  List of supported error codes: - 20: Invalid URL parameter value - 21: Missing body - 22: Invalid body - 23: Missing body field - 24: Invalid body field - 25: Missing header - 26: Invalid header value - 27: Missing query-string parameter - 28: Invalid query-string parameter value");
    public static final ProductOrderApiException ProductOrder_productOrderCreate_401_Exception = new ProductOrderApiException(401, "Unauthorized  List of supported error codes: - 40: Missing credentials - 41: Invalid credentials - 42: Expired credentials");
    public static final ProductOrderApiException ProductOrder_productOrderCreate_403_Exception = new ProductOrderApiException(403, "Forbidden  List of supported error codes: - 50: Access denied - 51: Forbidden requester - 52: Forbidden user - 53: Too many requests");
    public static final ProductOrderApiException ProductOrder_productOrderCreate_404_Exception = new ProductOrderApiException(404, "Not Found  List of supported error codes: - 60: Resource not found");
    public static final ProductOrderApiException ProductOrder_productOrderCreate_405_Exception = new ProductOrderApiException(405, "Method Not Allowed  List of supported error codes: - 61: Method not allowed");
    public static final ProductOrderApiException ProductOrder_productOrderCreate_408_Exception = new ProductOrderApiException(408, "Request Time-out  List of supported error codes: - 63: Request time-out");
    public static final ProductOrderApiException ProductOrder_productOrderCreate_422_Exception = new ProductOrderApiException(422, "Unprocessable entity  Functional error       - code: 100 message: Missing order item (minimum 1) description: At least one order item must be provided    - code: 101 message: Missing Buyer at order level description: One and only one related partyRole with a \"Buyer\" role should be provided at the product order level.    - code: 114 message: Missing Seller at order level description: One and only one related partyRole with a \"Seller\" role should be provided at the product order level.    - code: 102 message: A relatedParty is at the wrong level description: The partyRole provided is not at the correct level - MEF allows to have \"Buyer\", \"Seller\", \"Billing Contact\", \"Order Contact\", \"Implementation Contact\", \"Technical Contact\" roles at product order level and \"UNI Site Contact\", \"UNI Alt Site Contact\", \"ENNI Site Contact\", \"ENNI Alt Site Contact\" at product order item level.    - code: 103 message: Missing Buyer Order Contact at order level description: One and only one related partyRole with a \"Order Contact\" role should be provided at the product order level. Buyer Order Contact name & Telephone number must be provided.    - code: 104 message: Missing Buyer Implementation Contact at order level description: One and only one related partyRole with a \"Implementation Contact\" role should be provided at the product order level. Implementation Contact name & Telephone number must be provided.    - code: 105 message: Missing Buyer Technical contact at order level description: One and only one related partyRole with a \"Technical Contact\" role should be provided at the product order level. Technical Contact name, Telephone number and email address must be provided.    - code: 106 message: Address information must match place type description: If place type is 'Formatted Address' : addrLine1, city, stateOrProvince, postCode and country must be there. If place type is 'Fielded Address' : streetName, streetType, city, stateOrProvince, postCode and country must be there.    - code: 107 message: postCode extension requires postcode value to be filled description: A postCode extension must not be present without a postcode being present    - code: 108 message: Product id is required for all OrderItem Actions other than INSTALL description: If orderItemAction is not INSTALL, orderItem.product.id is mandatory    - code: 109 message: Order Activity must match all OrderItem Actions for INSTALL description: If orderActivity is set to INSTALL, all orderItemAction must be INSTALL    - code: 110 message: Referred quote cannot be used for ordering due to its status description: Quote cannot be used in the order if its status is in CANCELLED, UNABLE TO PROVIDE, REJECTED or EXPIRED state.    - code: 111 message: Billing Account information must not be both at order level and order item level description: Billing Account must not be present both at order header level and order item level.    - code: 112 message: PricingMethod, pricing Reference & pricing term attributes  must not be both at order level and order item level description: Pricing data  must not be present both at order header level and order item level.    - code: 113 message: Referred Serviceability request is expired description: Serviceability information are expired.    - code: 114 message: A reccuring price is mentionned without a charge period. description:     - code: 115 message: Referred Quote is not existing description:     - code: 116 message: Referred ProductOfferingQualification is not existing description:     - code: 117 message: Product /item relationship is missing description:     - code: 118 message: Product Id refered in a relationship is not existing description:");
    public static final ProductOrderApiException ProductOrder_productOrderCreate_500_Exception = new ProductOrderApiException(500, "Internal Server Error  List of supported error codes: - 1: Internal error");
    public static final ProductOrderApiException ProductOrder_productOrderCreate_503_Exception = new ProductOrderApiException(503, "Service Unavailable  ");
    public static final ProductOrderApiException ProductOrder_productOrderFind_400_Exception = new ProductOrderApiException(400, "Bad Request  List of supported error codes: - 20: Invalid URL parameter value - 21: Missing body - 22: Invalid body - 23: Missing body field - 24: Invalid body field - 25: Missing header - 26: Invalid header value - 27: Missing query-string parameter - 28: Invalid query-string parameter value");
    public static final ProductOrderApiException ProductOrder_productOrderFind_401_Exception = new ProductOrderApiException(401, "Unauthorized  List of supported error codes: - 40: Missing credentials - 41: Invalid credentials - 42: Expired credentials");
    public static final ProductOrderApiException ProductOrder_productOrderFind_403_Exception = new ProductOrderApiException(403, "Forbidden  List of supported error codes: - 50: Access denied - 51: Forbidden requester - 52: Forbidden user - 53: Too many requests");
    public static final ProductOrderApiException ProductOrder_productOrderFind_404_Exception = new ProductOrderApiException(404, "Not Found  List of supported error codes: - 60: Resource not found");
    public static final ProductOrderApiException ProductOrder_productOrderFind_405_Exception = new ProductOrderApiException(405, "Method Not Allowed  List of supported error codes: - 61: Method not allowed");
    public static final ProductOrderApiException ProductOrder_productOrderFind_408_Exception = new ProductOrderApiException(408, "Request Time-out  List of supported error codes: - 63: Request time-out");
    public static final ProductOrderApiException ProductOrder_productOrderFind_422_Exception = new ProductOrderApiException(422, "Unprocessable entity  Functional error       - code: 100 message: Too many records retrieved - please restrict requested parameter value(s) description:");
    public static final ProductOrderApiException ProductOrder_productOrderFind_500_Exception = new ProductOrderApiException(500, "Internal Server Error  List of supported error codes: - 1: Internal error");
    public static final ProductOrderApiException ProductOrder_productOrderFind_503_Exception = new ProductOrderApiException(503, "Service Unavailable  ");
    public static final ProductOrderApiException ProductOrder_productOrderGet_400_Exception = new ProductOrderApiException(400, "Bad Request  List of supported error codes: - 20: Invalid URL parameter value - 21: Missing body - 22: Invalid body - 23: Missing body field - 24: Invalid body field - 25: Missing header - 26: Invalid header value - 27: Missing query-string parameter - 28: Invalid query-string parameter value");
    public static final ProductOrderApiException ProductOrder_productOrderGet_401_Exception = new ProductOrderApiException(401, "Unauthorized  List of supported error codes: - 40: Missing credentials - 41: Invalid credentials - 42: Expired credentials");
    public static final ProductOrderApiException ProductOrder_productOrderGet_403_Exception = new ProductOrderApiException(403, "Forbidden  List of supported error codes: - 50: Access denied - 51: Forbidden requester - 52: Forbidden user - 53: Too many requests");
    public static final ProductOrderApiException ProductOrder_productOrderGet_404_Exception = new ProductOrderApiException(404, "Not Found  List of supported error codes: - 60: Resource not found");
    public static final ProductOrderApiException ProductOrder_productOrderGet_405_Exception = new ProductOrderApiException(405, "Method Not Allowed  List of supported error codes: - 61: Method not allowed");
    public static final ProductOrderApiException ProductOrder_productOrderGet_408_Exception = new ProductOrderApiException(408, "Request Time-out  List of supported error codes: - 63: Request time-out");
    public static final ProductOrderApiException ProductOrder_productOrderGet_422_Exception = new ProductOrderApiException(422, "Unprocessable entity  Functional error");
    public static final ProductOrderApiException ProductOrder_productOrderGet_500_Exception = new ProductOrderApiException(500, "Internal Server Error  List of supported error codes: - 1: Internal error");
    public static final ProductOrderApiException ProductOrder_productOrderGet_503_Exception = new ProductOrderApiException(503, "Service Unavailable  ");
    

}
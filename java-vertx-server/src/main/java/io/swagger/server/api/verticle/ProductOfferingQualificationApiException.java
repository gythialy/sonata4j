package io.swagger.server.api.verticle;

import io.swagger.server.api.model.ErrorRepresentation;
import io.swagger.server.api.MainApiException;
import java.time.OffsetDateTime;
import io.swagger.server.api.model.ProductOfferingQualification;
import io.swagger.server.api.model.ProductOfferingQualificationCreate;
import io.swagger.server.api.model.ProductOfferingQualificationFind;

public final class ProductOfferingQualificationApiException extends MainApiException {
    public ProductOfferingQualificationApiException(int statusCode, String statusMessage) {
        super(statusCode, statusMessage);
    }
    
    public static final ProductOfferingQualificationApiException ProductOfferingQualification_productOfferingQualificationCreate_400_Exception = new ProductOfferingQualificationApiException(400, "Bad Request  List of supported error codes: - 20: Invalid URL parameter value - 21: Missing body - 22: Invalid body - 23: Missing body field - 24: Invalid body field - 25: Missing header - 26: Invalid header value - 27: Missing query-string parameter - 28: Invalid query-string parameter value");
    public static final ProductOfferingQualificationApiException ProductOfferingQualification_productOfferingQualificationCreate_401_Exception = new ProductOfferingQualificationApiException(401, "Unauthorized  List of supported error codes: - 40: Missing credentials - 41: Invalid credentials - 42: Expired credentials");
    public static final ProductOfferingQualificationApiException ProductOfferingQualification_productOfferingQualificationCreate_403_Exception = new ProductOfferingQualificationApiException(403, "Forbidden  List of supported error codes: - 50: Access denied - 51: Forbidden requester - 52: Forbidden user - 53: Too many requests");
    public static final ProductOfferingQualificationApiException ProductOfferingQualification_productOfferingQualificationCreate_404_Exception = new ProductOfferingQualificationApiException(404, "Not Found  List of supported error codes: - 60: Resource not found");
    public static final ProductOfferingQualificationApiException ProductOfferingQualification_productOfferingQualificationCreate_408_Exception = new ProductOfferingQualificationApiException(408, "Request Time-out  List of supported error codes: - 63: Request time-out");
    public static final ProductOfferingQualificationApiException ProductOfferingQualification_productOfferingQualificationCreate_422_Exception = new ProductOfferingQualificationApiException(422, "Unprocessable entity  Functional error       - code: 100 message: A relatedParty - at productOfferingQualification level - with a role 'Buyer' must be provided (including contact information) description:     - code: 101 message: A least a productOffering OR a productSpecification OR a Product must be provided for a POQItem description:     - code: 102 message: Provided Product Offering Identifier is unknown description:     - code: 103 message: Provided Product Specification Identifier is unknown description:     - code: 104 message: Provided Product Identifier is unknown description:     - code: 105 message: The place information provided are invalid description:     - code: 106 message: A least one date provided is invalid description:     - code: 107 message: Incorrect related party role provided description:");
    public static final ProductOfferingQualificationApiException ProductOfferingQualification_productOfferingQualificationCreate_503_Exception = new ProductOfferingQualificationApiException(503, "Service Unavailable  ");
    public static final ProductOfferingQualificationApiException ProductOfferingQualification_productOfferingQualificationFind_400_Exception = new ProductOfferingQualificationApiException(400, "Bad Request  List of supported error codes: - 20: Invalid URL parameter value - 21: Missing body - 22: Invalid body - 23: Missing body field - 24: Invalid body field - 25: Missing header - 26: Invalid header value - 27: Missing query-string parameter - 28: Invalid query-string parameter value");
    public static final ProductOfferingQualificationApiException ProductOfferingQualification_productOfferingQualificationFind_401_Exception = new ProductOfferingQualificationApiException(401, "Unauthorized  List of supported error codes: - 40: Missing credentials - 41: Invalid credentials - 42: Expired credentials");
    public static final ProductOfferingQualificationApiException ProductOfferingQualification_productOfferingQualificationFind_403_Exception = new ProductOfferingQualificationApiException(403, "Forbidden  List of supported error codes: - 50: Access denied - 51: Forbidden requester - 52: Forbidden user - 53: Too many requests");
    public static final ProductOfferingQualificationApiException ProductOfferingQualification_productOfferingQualificationFind_404_Exception = new ProductOfferingQualificationApiException(404, "Not Found  List of supported error codes: - 60: Resource not found");
    public static final ProductOfferingQualificationApiException ProductOfferingQualification_productOfferingQualificationFind_408_Exception = new ProductOfferingQualificationApiException(408, "Request Time-out  List of supported error codes: - 63: Request time-out");
    public static final ProductOfferingQualificationApiException ProductOfferingQualification_productOfferingQualificationFind_422_Exception = new ProductOfferingQualificationApiException(422, "Unprocessable entity  Functional error       - code: 100 message: Too many records retrieved - please restrict requested parameter value(s) description:");
    public static final ProductOfferingQualificationApiException ProductOfferingQualification_productOfferingQualificationFind_503_Exception = new ProductOfferingQualificationApiException(503, "Service Unavailable  ");
    public static final ProductOfferingQualificationApiException ProductOfferingQualification_productOfferingQualificationGet_400_Exception = new ProductOfferingQualificationApiException(400, "Bad Request  List of supported error codes: - 20: Invalid URL parameter value - 21: Missing body - 22: Invalid body - 23: Missing body field - 24: Invalid body field - 25: Missing header - 26: Invalid header value - 27: Missing query-string parameter - 28: Invalid query-string parameter value");
    public static final ProductOfferingQualificationApiException ProductOfferingQualification_productOfferingQualificationGet_401_Exception = new ProductOfferingQualificationApiException(401, "Unauthorized  List of supported error codes: - 40: Missing credentials - 41: Invalid credentials - 42: Expired credentials");
    public static final ProductOfferingQualificationApiException ProductOfferingQualification_productOfferingQualificationGet_403_Exception = new ProductOfferingQualificationApiException(403, "Forbidden  List of supported error codes: - 50: Access denied - 51: Forbidden requester - 52: Forbidden user - 53: Too many requests");
    public static final ProductOfferingQualificationApiException ProductOfferingQualification_productOfferingQualificationGet_404_Exception = new ProductOfferingQualificationApiException(404, "Not Found  List of supported error codes: - 60: Resource not found");
    public static final ProductOfferingQualificationApiException ProductOfferingQualification_productOfferingQualificationGet_408_Exception = new ProductOfferingQualificationApiException(408, "Request Time-out  List of supported error codes: - 63: Request time-out");
    public static final ProductOfferingQualificationApiException ProductOfferingQualification_productOfferingQualificationGet_422_Exception = new ProductOfferingQualificationApiException(422, "Unprocessable entity  Functional error");
    public static final ProductOfferingQualificationApiException ProductOfferingQualification_productOfferingQualificationGet_503_Exception = new ProductOfferingQualificationApiException(503, "Service Unavailable  ");
    

}
package io.swagger.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.constraints.NotNull;
import java.util.Objects;

@ApiModel(description = "A reference to a product order used to perform cancellation request.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaResteasyEapServerCodegen", date = "2020-05-09T02:18:19.320Z")
public class ProductOrderRefCancel {

    private String referredType = null;
    private String externalId = null;
    private String href = null;
    private String id = null;
    private ProductOrderStateType state = null;
    private String version = null;

    /**
     * Technical attribute to extend the API
     **/

    @ApiModelProperty(value = "Technical attribute to extend the API")
    @JsonProperty("@referredType")
    public String getReferredType() {
        return referredType;
    }

    public void setReferredType(String referredType) {
        this.referredType = referredType;
    }

    /**
     * A number that uniquely identifies an order within the buyer&#39;s enterprise. Must be provided if provided when the order was initially accepted
     **/

    @ApiModelProperty(value = "A number that uniquely identifies an order within the buyer's enterprise. Must be provided if provided when the order was initially accepted")
    @JsonProperty("externalId")
    public String getExternalId() {
        return externalId;
    }

    public void setExternalId(String externalId) {
        this.externalId = externalId;
    }

    /**
     * Hyperlink to access the order
     **/

    @ApiModelProperty(value = "Hyperlink to access the order")
    @JsonProperty("href")
    public String getHref() {
        return href;
    }

    public void setHref(String href) {
        this.href = href;
    }

    /**
     * Unique (within the ordering domain) identifier for the order that is generated by the seller when the order is initially accepted.
     **/

    @ApiModelProperty(required = true, value = "Unique (within the ordering domain) identifier for the order that is generated by the seller when the order is initially accepted.")
    @JsonProperty("id")
    @NotNull
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    /**
     *
     **/

    @ApiModelProperty(value = "")
    @JsonProperty("state")
    public ProductOrderStateType getState() {
        return state;
    }

    public void setState(ProductOrderStateType state) {
        this.state = state;
    }

    /**
     * The version number that the Buyer uses to refer to this particular version of the order. This not checked for conformance (informative information)
     **/

    @ApiModelProperty(value = "The version number that the Buyer uses to refer to this particular version of the order. This not checked for conformance (informative information)")
    @JsonProperty("version")
    public String getVersion() {
        return version;
    }

    public void setVersion(String version) {
        this.version = version;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ProductOrderRefCancel productOrderRefCancel = (ProductOrderRefCancel) o;
        return Objects.equals(referredType, productOrderRefCancel.referredType) &&
                Objects.equals(externalId, productOrderRefCancel.externalId) &&
                Objects.equals(href, productOrderRefCancel.href) &&
                Objects.equals(id, productOrderRefCancel.id) &&
                Objects.equals(state, productOrderRefCancel.state) &&
                Objects.equals(version, productOrderRefCancel.version);
    }

    @Override
    public int hashCode() {
        return Objects.hash(referredType, externalId, href, id, state, version);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ProductOrderRefCancel {\n");

        sb.append("    referredType: ").append(toIndentedString(referredType)).append("\n");
        sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
        sb.append("    href: ").append(toIndentedString(href)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    state: ").append(toIndentedString(state)).append("\n");
        sb.append("    version: ").append(toIndentedString(version)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}


package io.swagger.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.constraints.NotNull;
import java.util.Date;
import java.util.Objects;

@ApiModel(description = "Structure to define GET without id response. A list of productOrder matching request criteria. Provides Product order summary view.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaResteasyEapServerCodegen", date = "2020-05-09T02:18:19.320Z")
public class ProductOrderSummary {

    private String externalId = null;
    private String id = null;
    private Date orderDate = null;
    private ProductOrderStateType state = null;

    /**
     * ID given by the consumer and only understandable by him (to facilitate his searches afterwards). MEF: Buyer Purchase Order Number
     **/

    @ApiModelProperty(required = true, value = "ID given by the consumer and only understandable by him (to facilitate his searches afterwards). MEF: Buyer Purchase Order Number")
    @JsonProperty("externalId")
    @NotNull
    public String getExternalId() {
        return externalId;
    }

    public void setExternalId(String externalId) {
        this.externalId = externalId;
    }

    /**
     * ID created on repository side (OM system) MEF: Unique identifier for the order that is generated by the Seller when the order is initially accepted via an API.
     **/

    @ApiModelProperty(required = true, value = "ID created on repository side (OM system) MEF: Unique identifier for the order that is generated by the Seller when the order is initially accepted via an API.")
    @JsonProperty("id")
    @NotNull
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    /**
     * Date when the order was created
     **/

    @ApiModelProperty(required = true, value = "Date when the order was created")
    @JsonProperty("orderDate")
    @NotNull
    public Date getOrderDate() {
        return orderDate;
    }

    public void setOrderDate(Date orderDate) {
        this.orderDate = orderDate;
    }

    /**
     *
     **/

    @ApiModelProperty(required = true, value = "")
    @JsonProperty("state")
    @NotNull
    public ProductOrderStateType getState() {
        return state;
    }

    public void setState(ProductOrderStateType state) {
        this.state = state;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ProductOrderSummary productOrderSummary = (ProductOrderSummary) o;
        return Objects.equals(externalId, productOrderSummary.externalId) &&
                Objects.equals(id, productOrderSummary.id) &&
                Objects.equals(orderDate, productOrderSummary.orderDate) &&
                Objects.equals(state, productOrderSummary.state);
    }

    @Override
    public int hashCode() {
        return Objects.hash(externalId, id, orderDate, state);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ProductOrderSummary {\n");

        sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    orderDate: ").append(toIndentedString(orderDate)).append("\n");
        sb.append("    state: ").append(toIndentedString(state)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}


/**
 * MEF LSO Sonata
 *  A set of APIs based on the LSO Reference Architecture for Serviceability (Address Validation, Site Queries, Product Offering Qualification) | Quoting | Product Inventory | Ordering | Trouble-ticketing Billing | Contract & Catalog  
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.api;

import io.swagger.model.ErrorRepresentation;
import io.swagger.model.Event;
import io.swagger.model.EventPlus;
import java.util.List;
import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;




/**
 * MEF LSO Sonata
 *
 * <p> A set of APIs based on the LSO Reference Architecture for Serviceability (Address Validation, Site Queries, Product Offering Qualification) | Quoting | Product Inventory | Ordering | Trouble-ticketing Billing | Contract & Catalog  
 *
 * API tests for NotificationApi 
 */
public class NotificationApiTest {


    private NotificationApi api;
    
    @Before
    public void setup() {
        JacksonJsonProvider provider = new JacksonJsonProvider();
        List providers = new ArrayList();
        providers.add(provider);
        
        api = JAXRSClientFactory.create("https://serverRoot/api/mef", NotificationApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);
        
        ClientConfiguration config = WebClient.getConfig(client); 
    }

    
    /**
     * Product Order attribute value change structure
     *
     * Product Order attribute value change structure description
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void notificationProductOrderAttributeValueChangeNotificationTest() {
        EventPlus productOrderAttributeValueChange = null;
        //api.notificationProductOrderAttributeValueChangeNotification(productOrderAttributeValueChange);
        
        // TODO: test validations
        
        
    }
    
    /**
     * Product order creation notification structure
     *
     * Product order creation notification structure description
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void notificationProductOrderCreationNotificationTest() {
        Event productOrderCreationNotification = null;
        //api.notificationProductOrderCreationNotification(productOrderCreationNotification);
        
        // TODO: test validations
        
        
    }
    
    /**
     * Product Order information required structure
     *
     * Product Order information required structure description
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void notificationProductOrderInformationRequiredNotificationTest() {
        EventPlus productOrderInformationRequired = null;
        //api.notificationProductOrderInformationRequiredNotification(productOrderInformationRequired);
        
        // TODO: test validations
        
        
    }
    
    /**
     * Product order state change structure
     *
     * Product order state change structure description
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void notificationProductOrderStateChangeNotificationTest() {
        Event productOrderStateChange = null;
        //api.notificationProductOrderStateChangeNotification(productOrderStateChange);
        
        // TODO: test validations
        
        
    }
    
    /**
     * Quote attribute value change notification structure
     *
     * Quote attribute value change notification structure description. Attribute resourcePatch allows to target quote but also quoteItem - example: resourcePath\&quot;:\&quot;/quote/42/quoteItem/3\&quot; is the item #3 of quote #42 Attribute fieldPath allows to target attribute with value changed.  Specific business errors for current operation will be encapsulated in  HTTP Response 422 Unprocessable entity 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void notificationQuoteAttributeValueChangeNotificationTest() {
        List<EventPlus> quoteAttributeValueChangeNotification = null;
        //api.notificationQuoteAttributeValueChangeNotification(quoteAttributeValueChangeNotification);
        
        // TODO: test validations
        
        
    }
    
    /**
     * Quote creation notification structure
     *
     * Quote creation notification structure definition  Specific business errors for current operation will be encapsulated in  HTTP Response 422 Unprocessable entity 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void notificationQuoteCreationNotificationTest() {
        Event quoteCreationNotification = null;
        //api.notificationQuoteCreationNotification(quoteCreationNotification);
        
        // TODO: test validations
        
        
    }
    
    /**
     * Quote information required notification structure
     *
     * Quote information required notification structure description. Attribute resourcePatch allows to target quote but also quoteItem - example: resourcePath\&quot;:\&quot;/quote/42/quoteItem/3\&quot; is the item #3 of quote #42 Attribute fieldPath allows to target missing information: fieldPath\&quot;:\&quot;missing&#x3D;quote.relatedParty.Role.value&amp;party.id&#x3D;46\&quot; means role information is missing for party 46.  Specific business errors for current operation will be encapsulated in  HTTP Response 422 Unprocessable entity 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void notificationQuoteInformationRequiredNotificationTest() {
        List<EventPlus> quoteInformationRequiredNotification = null;
        //api.notificationQuoteInformationRequiredNotification(quoteInformationRequiredNotification);
        
        // TODO: test validations
        
        
    }
    
    /**
     * Quote state change notification structure
     *
     * Quote state change notification structure description  Specific business errors for current operation will be encapsulated in  HTTP Response 422 Unprocessable entity 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void notificationQuoteStateChangeNotificationTest() {
        Event quoteStateChangeNotification = null;
        //api.notificationQuoteStateChangeNotification(quoteStateChangeNotification);
        
        // TODO: test validations
        
        
    }
    
}

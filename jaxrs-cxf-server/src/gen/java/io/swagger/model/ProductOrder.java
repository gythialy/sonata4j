package io.swagger.model;

import io.swagger.annotations.ApiModel;
import io.swagger.model.BillingAccountRef;
import io.swagger.model.DesiredOrderResponses;
import io.swagger.model.Note;
import io.swagger.model.OrderActivity;
import io.swagger.model.OrderItem;
import io.swagger.model.OrderMessage;
import io.swagger.model.PricingMethod;
import io.swagger.model.ProductOrderStateType;
import io.swagger.model.RelatedParty;
import io.swagger.model.StateChange;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;

import io.swagger.annotations.ApiModelProperty;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
  * A ProductOrder is a type of business interaction that is used to procure a Product based upon a Product Offering.
 **/
@ApiModel(description="A ProductOrder is a type of business interaction that is used to procure a Product based upon a Product Offering.")
public class ProductOrder  {
  
  @ApiModelProperty(value = "Technical attribute to extend the API")
 /**
   * Technical attribute to extend the API
  **/
  private String baseType = null;

  @ApiModelProperty(value = "Technical attribute to extend the API")
 /**
   * Technical attribute to extend the API
  **/
  private String schemaLocation = null;

  @ApiModelProperty(value = "Technical attribute to extend the API")
 /**
   * Technical attribute to extend the API
  **/
  private String type = null;

  @ApiModelProperty(value = "")
  @Valid
  private BillingAccountRef billingAccount = null;

  @ApiModelProperty(value = "Buyer order creation date. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)")
 /**
   * Buyer order creation date. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)
  **/
  private Date buyerRequestDate = null;

  @ApiModelProperty(value = "Identifies the date the Seller canceled the Order")
 /**
   * Identifies the date the Seller canceled the Order
  **/
  private Date cancellationDate = null;

  @ApiModelProperty(value = "Indicates reason why buyer requested cancellation")
 /**
   * Indicates reason why buyer requested cancellation
  **/
  private String cancellationReason = null;

  @ApiModelProperty(value = "The date the order is completed. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)")
 /**
   * The date the order is completed. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)
  **/
  private Date completionDate = null;

  @ApiModelProperty(required = true, value = "")
  @Valid
  private DesiredOrderResponses desiredResponses = null;

  @ApiModelProperty(value = "Expected delivery date amended by the provider")
 /**
   * Expected delivery date amended by the provider
  **/
  private Date expectedCompletionDate = null;

  @ApiModelProperty(value = "Indicates that expedited treatment is requested and any charges generated in provisioning this request (e.g., additional engineering charges or labor charges if applicable) will be accepted by the buyer.")
 /**
   * Indicates that expedited treatment is requested and any charges generated in provisioning this request (e.g., additional engineering charges or labor charges if applicable) will be accepted by the buyer.
  **/
  private Boolean expeditePriority = null;

  @ApiModelProperty(required = true, value = "A number that uniquely identifies an order within the buyer's enterprise.")
 /**
   * A number that uniquely identifies an order within the buyer's enterprise.
  **/
  private String externalId = null;

  @ApiModelProperty(required = true, value = "Hyperlink to access the order")
 /**
   * Hyperlink to access the order
  **/
  private String href = null;

  @ApiModelProperty(required = true, value = "Unique (within the ordering domain) identifier for the order that is generated by the seller when the order is initially accepted.")
 /**
   * Unique (within the ordering domain) identifier for the order that is generated by the seller when the order is initially accepted.
  **/
  private String id = null;

  @ApiModelProperty(value = "")
  @Valid
  private List<Note> note = null;

  @ApiModelProperty(required = true, value = "")
  @Valid
  private OrderActivity orderActivity = null;

  @ApiModelProperty(required = true, value = "Date when the order was created by seller. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)")
 /**
   * Date when the order was created by seller. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)
  **/
  private Date orderDate = null;

  @ApiModelProperty(required = true, value = "")
  @Valid
  private List<OrderItem> orderItem = new ArrayList<OrderItem>();

  @ApiModelProperty(value = "")
  @Valid
  private List<OrderMessage> orderMessage = null;

  @ApiModelProperty(required = true, value = "The version number that the Buyer uses to refer to this particular version of the order")
 /**
   * The version number that the Buyer uses to refer to this particular version of the order
  **/
  private String orderVersion = "1";

  @ApiModelProperty(value = "")
  @Valid
  private PricingMethod pricingMethod = null;

  @ApiModelProperty(value = "The identifier references the previously agreed upon pricing terms, as applicable, based on the pricingMethod (e.g. a contract id or tariff id.")
 /**
   * The identifier references the previously agreed upon pricing terms, as applicable, based on the pricingMethod (e.g. a contract id or tariff id.
  **/
  private String pricingReference = null;

  @ApiModelProperty(value = "The length of the contract in months.")
 /**
   * The length of the contract in months.
  **/
  private Integer pricingTerm = null;

  @ApiModelProperty(value = "An integer that specifies that expedited treatment is to be provided in a specific priority. This field will be ignored if the Expedite/Priority Indicator is False. The valid values and the business/operational rules for this field will be defined by the Seller as part of the contracting or on-boarding process.")
 /**
   * An integer that specifies that expedited treatment is to be provided in a specific priority. This field will be ignored if the Expedite/Priority Indicator is False. The valid values and the business/operational rules for this field will be defined by the Seller as part of the contracting or on-boarding process.
  **/
  private Integer priority = null;

  @ApiModelProperty(value = "An identifier that is used to group Orders that is important to the Buyer. A ProjectId can be used to relate multiple Orders together")
 /**
   * An identifier that is used to group Orders that is important to the Buyer. A ProjectId can be used to relate multiple Orders together
  **/
  private String projectId = null;

  @ApiModelProperty(value = "Related Buyer Purchase Order Number (RPON)")
 /**
   * Related Buyer Purchase Order Number (RPON)
  **/
  private String relatedBuyerPON = null;

  @ApiModelProperty(required = true, value = "")
  @Valid
  private List<RelatedParty> relatedParty = new ArrayList<RelatedParty>();

  @ApiModelProperty(required = true, value = "Identifies the buyer's desired due date (requested delivery date). Cannot be requested on cancelled orders.  Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00).")
 /**
   * Identifies the buyer's desired due date (requested delivery date). Cannot be requested on cancelled orders.  Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00).
  **/
  private Date requestedCompletionDate = null;

  @ApiModelProperty(value = "The buyer's requested date that order processing should start. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00).")
 /**
   * The buyer's requested date that order processing should start. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00).
  **/
  private Date requestedStartDate = null;

  @ApiModelProperty(required = true, value = "")
  @Valid
  private ProductOrderStateType state = null;

  @ApiModelProperty(value = "")
  @Valid
  private List<StateChange> stateChange = null;

  @ApiModelProperty(value = "Within the United States, indicates the provisioning and restoration priority as defined under the TSP Service Vendor Handbook, The valid values are defined in ATIS OBF document: ATIS-0404001")
 /**
   * Within the United States, indicates the provisioning and restoration priority as defined under the TSP Service Vendor Handbook, The valid values are defined in ATIS OBF document: ATIS-0404001
  **/
  private String tspRestorationPriority = null;
 /**
   * Technical attribute to extend the API
   * @return baseType
  **/
  @JsonProperty("@baseType")
  public String getBaseType() {
    return baseType;
  }

  public void setBaseType(String baseType) {
    this.baseType = baseType;
  }

  public ProductOrder baseType(String baseType) {
    this.baseType = baseType;
    return this;
  }

 /**
   * Technical attribute to extend the API
   * @return schemaLocation
  **/
  @JsonProperty("@schemaLocation")
  public String getSchemaLocation() {
    return schemaLocation;
  }

  public void setSchemaLocation(String schemaLocation) {
    this.schemaLocation = schemaLocation;
  }

  public ProductOrder schemaLocation(String schemaLocation) {
    this.schemaLocation = schemaLocation;
    return this;
  }

 /**
   * Technical attribute to extend the API
   * @return type
  **/
  @JsonProperty("@type")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public ProductOrder type(String type) {
    this.type = type;
    return this;
  }

 /**
   * Get billingAccount
   * @return billingAccount
  **/
  @JsonProperty("billingAccount")
  public BillingAccountRef getBillingAccount() {
    return billingAccount;
  }

  public void setBillingAccount(BillingAccountRef billingAccount) {
    this.billingAccount = billingAccount;
  }

  public ProductOrder billingAccount(BillingAccountRef billingAccount) {
    this.billingAccount = billingAccount;
    return this;
  }

 /**
   * Buyer order creation date. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)
   * @return buyerRequestDate
  **/
  @JsonProperty("buyerRequestDate")
  public Date getBuyerRequestDate() {
    return buyerRequestDate;
  }

  public void setBuyerRequestDate(Date buyerRequestDate) {
    this.buyerRequestDate = buyerRequestDate;
  }

  public ProductOrder buyerRequestDate(Date buyerRequestDate) {
    this.buyerRequestDate = buyerRequestDate;
    return this;
  }

 /**
   * Identifies the date the Seller canceled the Order
   * @return cancellationDate
  **/
  @JsonProperty("cancellationDate")
  public Date getCancellationDate() {
    return cancellationDate;
  }

  public void setCancellationDate(Date cancellationDate) {
    this.cancellationDate = cancellationDate;
  }

  public ProductOrder cancellationDate(Date cancellationDate) {
    this.cancellationDate = cancellationDate;
    return this;
  }

 /**
   * Indicates reason why buyer requested cancellation
   * @return cancellationReason
  **/
  @JsonProperty("cancellationReason")
  public String getCancellationReason() {
    return cancellationReason;
  }

  public void setCancellationReason(String cancellationReason) {
    this.cancellationReason = cancellationReason;
  }

  public ProductOrder cancellationReason(String cancellationReason) {
    this.cancellationReason = cancellationReason;
    return this;
  }

 /**
   * The date the order is completed. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)
   * @return completionDate
  **/
  @JsonProperty("completionDate")
  public Date getCompletionDate() {
    return completionDate;
  }

  public void setCompletionDate(Date completionDate) {
    this.completionDate = completionDate;
  }

  public ProductOrder completionDate(Date completionDate) {
    this.completionDate = completionDate;
    return this;
  }

 /**
   * Get desiredResponses
   * @return desiredResponses
  **/
  @JsonProperty("desiredResponses")
  @NotNull
  public DesiredOrderResponses getDesiredResponses() {
    return desiredResponses;
  }

  public void setDesiredResponses(DesiredOrderResponses desiredResponses) {
    this.desiredResponses = desiredResponses;
  }

  public ProductOrder desiredResponses(DesiredOrderResponses desiredResponses) {
    this.desiredResponses = desiredResponses;
    return this;
  }

 /**
   * Expected delivery date amended by the provider
   * @return expectedCompletionDate
  **/
  @JsonProperty("expectedCompletionDate")
  public Date getExpectedCompletionDate() {
    return expectedCompletionDate;
  }

  public void setExpectedCompletionDate(Date expectedCompletionDate) {
    this.expectedCompletionDate = expectedCompletionDate;
  }

  public ProductOrder expectedCompletionDate(Date expectedCompletionDate) {
    this.expectedCompletionDate = expectedCompletionDate;
    return this;
  }

 /**
   * Indicates that expedited treatment is requested and any charges generated in provisioning this request (e.g., additional engineering charges or labor charges if applicable) will be accepted by the buyer.
   * @return expeditePriority
  **/
  @JsonProperty("expeditePriority")
  public Boolean isExpeditePriority() {
    return expeditePriority;
  }

  public void setExpeditePriority(Boolean expeditePriority) {
    this.expeditePriority = expeditePriority;
  }

  public ProductOrder expeditePriority(Boolean expeditePriority) {
    this.expeditePriority = expeditePriority;
    return this;
  }

 /**
   * A number that uniquely identifies an order within the buyer&#39;s enterprise.
   * @return externalId
  **/
  @JsonProperty("externalId")
  @NotNull
  public String getExternalId() {
    return externalId;
  }

  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }

  public ProductOrder externalId(String externalId) {
    this.externalId = externalId;
    return this;
  }

 /**
   * Hyperlink to access the order
   * @return href
  **/
  @JsonProperty("href")
  @NotNull
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public ProductOrder href(String href) {
    this.href = href;
    return this;
  }

 /**
   * Unique (within the ordering domain) identifier for the order that is generated by the seller when the order is initially accepted.
   * @return id
  **/
  @JsonProperty("id")
  @NotNull
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ProductOrder id(String id) {
    this.id = id;
    return this;
  }

 /**
   * Get note
   * @return note
  **/
  @JsonProperty("note")
  public List<Note> getNote() {
    return note;
  }

  public void setNote(List<Note> note) {
    this.note = note;
  }

  public ProductOrder note(List<Note> note) {
    this.note = note;
    return this;
  }

  public ProductOrder addNoteItem(Note noteItem) {
    this.note.add(noteItem);
    return this;
  }

 /**
   * Get orderActivity
   * @return orderActivity
  **/
  @JsonProperty("orderActivity")
  @NotNull
  public OrderActivity getOrderActivity() {
    return orderActivity;
  }

  public void setOrderActivity(OrderActivity orderActivity) {
    this.orderActivity = orderActivity;
  }

  public ProductOrder orderActivity(OrderActivity orderActivity) {
    this.orderActivity = orderActivity;
    return this;
  }

 /**
   * Date when the order was created by seller. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)
   * @return orderDate
  **/
  @JsonProperty("orderDate")
  @NotNull
  public Date getOrderDate() {
    return orderDate;
  }

  public void setOrderDate(Date orderDate) {
    this.orderDate = orderDate;
  }

  public ProductOrder orderDate(Date orderDate) {
    this.orderDate = orderDate;
    return this;
  }

 /**
   * Get orderItem
   * @return orderItem
  **/
  @JsonProperty("orderItem")
  @NotNull
 @Size(min=1)  public List<OrderItem> getOrderItem() {
    return orderItem;
  }

  public void setOrderItem(List<OrderItem> orderItem) {
    this.orderItem = orderItem;
  }

  public ProductOrder orderItem(List<OrderItem> orderItem) {
    this.orderItem = orderItem;
    return this;
  }

  public ProductOrder addOrderItemItem(OrderItem orderItemItem) {
    this.orderItem.add(orderItemItem);
    return this;
  }

 /**
   * Get orderMessage
   * @return orderMessage
  **/
  @JsonProperty("orderMessage")
  public List<OrderMessage> getOrderMessage() {
    return orderMessage;
  }

  public void setOrderMessage(List<OrderMessage> orderMessage) {
    this.orderMessage = orderMessage;
  }

  public ProductOrder orderMessage(List<OrderMessage> orderMessage) {
    this.orderMessage = orderMessage;
    return this;
  }

  public ProductOrder addOrderMessageItem(OrderMessage orderMessageItem) {
    this.orderMessage.add(orderMessageItem);
    return this;
  }

 /**
   * The version number that the Buyer uses to refer to this particular version of the order
   * @return orderVersion
  **/
  @JsonProperty("orderVersion")
  @NotNull
  public String getOrderVersion() {
    return orderVersion;
  }

  public void setOrderVersion(String orderVersion) {
    this.orderVersion = orderVersion;
  }

  public ProductOrder orderVersion(String orderVersion) {
    this.orderVersion = orderVersion;
    return this;
  }

 /**
   * Get pricingMethod
   * @return pricingMethod
  **/
  @JsonProperty("pricingMethod")
  public PricingMethod getPricingMethod() {
    return pricingMethod;
  }

  public void setPricingMethod(PricingMethod pricingMethod) {
    this.pricingMethod = pricingMethod;
  }

  public ProductOrder pricingMethod(PricingMethod pricingMethod) {
    this.pricingMethod = pricingMethod;
    return this;
  }

 /**
   * The identifier references the previously agreed upon pricing terms, as applicable, based on the pricingMethod (e.g. a contract id or tariff id.
   * @return pricingReference
  **/
  @JsonProperty("pricingReference")
  public String getPricingReference() {
    return pricingReference;
  }

  public void setPricingReference(String pricingReference) {
    this.pricingReference = pricingReference;
  }

  public ProductOrder pricingReference(String pricingReference) {
    this.pricingReference = pricingReference;
    return this;
  }

 /**
   * The length of the contract in months.
   * @return pricingTerm
  **/
  @JsonProperty("pricingTerm")
  public Integer getPricingTerm() {
    return pricingTerm;
  }

  public void setPricingTerm(Integer pricingTerm) {
    this.pricingTerm = pricingTerm;
  }

  public ProductOrder pricingTerm(Integer pricingTerm) {
    this.pricingTerm = pricingTerm;
    return this;
  }

 /**
   * An integer that specifies that expedited treatment is to be provided in a specific priority. This field will be ignored if the Expedite/Priority Indicator is False. The valid values and the business/operational rules for this field will be defined by the Seller as part of the contracting or on-boarding process.
   * @return priority
  **/
  @JsonProperty("priority")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public ProductOrder priority(Integer priority) {
    this.priority = priority;
    return this;
  }

 /**
   * An identifier that is used to group Orders that is important to the Buyer. A ProjectId can be used to relate multiple Orders together
   * @return projectId
  **/
  @JsonProperty("projectId")
  public String getProjectId() {
    return projectId;
  }

  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }

  public ProductOrder projectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

 /**
   * Related Buyer Purchase Order Number (RPON)
   * @return relatedBuyerPON
  **/
  @JsonProperty("relatedBuyerPON")
  public String getRelatedBuyerPON() {
    return relatedBuyerPON;
  }

  public void setRelatedBuyerPON(String relatedBuyerPON) {
    this.relatedBuyerPON = relatedBuyerPON;
  }

  public ProductOrder relatedBuyerPON(String relatedBuyerPON) {
    this.relatedBuyerPON = relatedBuyerPON;
    return this;
  }

 /**
   * Get relatedParty
   * @return relatedParty
  **/
  @JsonProperty("relatedParty")
  @NotNull
  public List<RelatedParty> getRelatedParty() {
    return relatedParty;
  }

  public void setRelatedParty(List<RelatedParty> relatedParty) {
    this.relatedParty = relatedParty;
  }

  public ProductOrder relatedParty(List<RelatedParty> relatedParty) {
    this.relatedParty = relatedParty;
    return this;
  }

  public ProductOrder addRelatedPartyItem(RelatedParty relatedPartyItem) {
    this.relatedParty.add(relatedPartyItem);
    return this;
  }

 /**
   * Identifies the buyer&#39;s desired due date (requested delivery date). Cannot be requested on cancelled orders.  Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00).
   * @return requestedCompletionDate
  **/
  @JsonProperty("requestedCompletionDate")
  @NotNull
  public Date getRequestedCompletionDate() {
    return requestedCompletionDate;
  }

  public void setRequestedCompletionDate(Date requestedCompletionDate) {
    this.requestedCompletionDate = requestedCompletionDate;
  }

  public ProductOrder requestedCompletionDate(Date requestedCompletionDate) {
    this.requestedCompletionDate = requestedCompletionDate;
    return this;
  }

 /**
   * The buyer&#39;s requested date that order processing should start. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00).
   * @return requestedStartDate
  **/
  @JsonProperty("requestedStartDate")
  public Date getRequestedStartDate() {
    return requestedStartDate;
  }

  public void setRequestedStartDate(Date requestedStartDate) {
    this.requestedStartDate = requestedStartDate;
  }

  public ProductOrder requestedStartDate(Date requestedStartDate) {
    this.requestedStartDate = requestedStartDate;
    return this;
  }

 /**
   * Get state
   * @return state
  **/
  @JsonProperty("state")
  @NotNull
  public ProductOrderStateType getState() {
    return state;
  }

  public void setState(ProductOrderStateType state) {
    this.state = state;
  }

  public ProductOrder state(ProductOrderStateType state) {
    this.state = state;
    return this;
  }

 /**
   * Get stateChange
   * @return stateChange
  **/
  @JsonProperty("stateChange")
  public List<StateChange> getStateChange() {
    return stateChange;
  }

  public void setStateChange(List<StateChange> stateChange) {
    this.stateChange = stateChange;
  }

  public ProductOrder stateChange(List<StateChange> stateChange) {
    this.stateChange = stateChange;
    return this;
  }

  public ProductOrder addStateChangeItem(StateChange stateChangeItem) {
    this.stateChange.add(stateChangeItem);
    return this;
  }

 /**
   * Within the United States, indicates the provisioning and restoration priority as defined under the TSP Service Vendor Handbook, The valid values are defined in ATIS OBF document: ATIS-0404001
   * @return tspRestorationPriority
  **/
  @JsonProperty("tspRestorationPriority")
  public String getTspRestorationPriority() {
    return tspRestorationPriority;
  }

  public void setTspRestorationPriority(String tspRestorationPriority) {
    this.tspRestorationPriority = tspRestorationPriority;
  }

  public ProductOrder tspRestorationPriority(String tspRestorationPriority) {
    this.tspRestorationPriority = tspRestorationPriority;
    return this;
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductOrder {\n");
    
    sb.append("    baseType: ").append(toIndentedString(baseType)).append("\n");
    sb.append("    schemaLocation: ").append(toIndentedString(schemaLocation)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    billingAccount: ").append(toIndentedString(billingAccount)).append("\n");
    sb.append("    buyerRequestDate: ").append(toIndentedString(buyerRequestDate)).append("\n");
    sb.append("    cancellationDate: ").append(toIndentedString(cancellationDate)).append("\n");
    sb.append("    cancellationReason: ").append(toIndentedString(cancellationReason)).append("\n");
    sb.append("    completionDate: ").append(toIndentedString(completionDate)).append("\n");
    sb.append("    desiredResponses: ").append(toIndentedString(desiredResponses)).append("\n");
    sb.append("    expectedCompletionDate: ").append(toIndentedString(expectedCompletionDate)).append("\n");
    sb.append("    expeditePriority: ").append(toIndentedString(expeditePriority)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    orderActivity: ").append(toIndentedString(orderActivity)).append("\n");
    sb.append("    orderDate: ").append(toIndentedString(orderDate)).append("\n");
    sb.append("    orderItem: ").append(toIndentedString(orderItem)).append("\n");
    sb.append("    orderMessage: ").append(toIndentedString(orderMessage)).append("\n");
    sb.append("    orderVersion: ").append(toIndentedString(orderVersion)).append("\n");
    sb.append("    pricingMethod: ").append(toIndentedString(pricingMethod)).append("\n");
    sb.append("    pricingReference: ").append(toIndentedString(pricingReference)).append("\n");
    sb.append("    pricingTerm: ").append(toIndentedString(pricingTerm)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    relatedBuyerPON: ").append(toIndentedString(relatedBuyerPON)).append("\n");
    sb.append("    relatedParty: ").append(toIndentedString(relatedParty)).append("\n");
    sb.append("    requestedCompletionDate: ").append(toIndentedString(requestedCompletionDate)).append("\n");
    sb.append("    requestedStartDate: ").append(toIndentedString(requestedStartDate)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    stateChange: ").append(toIndentedString(stateChange)).append("\n");
    sb.append("    tspRestorationPriority: ").append(toIndentedString(tspRestorationPriority)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}


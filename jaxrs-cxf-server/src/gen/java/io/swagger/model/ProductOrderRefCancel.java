package io.swagger.model;

import io.swagger.annotations.ApiModel;
import io.swagger.model.ProductOrderStateType;
import javax.validation.constraints.*;
import javax.validation.Valid;

import io.swagger.annotations.ApiModelProperty;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
  * A reference to a product order used to perform cancellation request.
 **/
@ApiModel(description="A reference to a product order used to perform cancellation request.")
public class ProductOrderRefCancel  {
  
  @ApiModelProperty(value = "Technical attribute to extend the API")
 /**
   * Technical attribute to extend the API
  **/
  private String referredType = null;

  @ApiModelProperty(value = "A number that uniquely identifies an order within the buyer's enterprise. Must be provided if provided when the order was initially accepted")
 /**
   * A number that uniquely identifies an order within the buyer's enterprise. Must be provided if provided when the order was initially accepted
  **/
  private String externalId = null;

  @ApiModelProperty(value = "Hyperlink to access the order")
 /**
   * Hyperlink to access the order
  **/
  private String href = null;

  @ApiModelProperty(required = true, value = "Unique (within the ordering domain) identifier for the order that is generated by the seller when the order is initially accepted.")
 /**
   * Unique (within the ordering domain) identifier for the order that is generated by the seller when the order is initially accepted.
  **/
  private String id = null;

  @ApiModelProperty(value = "")
  @Valid
  private ProductOrderStateType state = null;

  @ApiModelProperty(value = "The version number that the Buyer uses to refer to this particular version of the order. This not checked for conformance (informative information)")
 /**
   * The version number that the Buyer uses to refer to this particular version of the order. This not checked for conformance (informative information)
  **/
  private String version = null;
 /**
   * Technical attribute to extend the API
   * @return referredType
  **/
  @JsonProperty("@referredType")
  public String getReferredType() {
    return referredType;
  }

  public void setReferredType(String referredType) {
    this.referredType = referredType;
  }

  public ProductOrderRefCancel referredType(String referredType) {
    this.referredType = referredType;
    return this;
  }

 /**
   * A number that uniquely identifies an order within the buyer&#39;s enterprise. Must be provided if provided when the order was initially accepted
   * @return externalId
  **/
  @JsonProperty("externalId")
  public String getExternalId() {
    return externalId;
  }

  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }

  public ProductOrderRefCancel externalId(String externalId) {
    this.externalId = externalId;
    return this;
  }

 /**
   * Hyperlink to access the order
   * @return href
  **/
  @JsonProperty("href")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public ProductOrderRefCancel href(String href) {
    this.href = href;
    return this;
  }

 /**
   * Unique (within the ordering domain) identifier for the order that is generated by the seller when the order is initially accepted.
   * @return id
  **/
  @JsonProperty("id")
  @NotNull
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ProductOrderRefCancel id(String id) {
    this.id = id;
    return this;
  }

 /**
   * Get state
   * @return state
  **/
  @JsonProperty("state")
  public ProductOrderStateType getState() {
    return state;
  }

  public void setState(ProductOrderStateType state) {
    this.state = state;
  }

  public ProductOrderRefCancel state(ProductOrderStateType state) {
    this.state = state;
    return this;
  }

 /**
   * The version number that the Buyer uses to refer to this particular version of the order. This not checked for conformance (informative information)
   * @return version
  **/
  @JsonProperty("version")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public ProductOrderRefCancel version(String version) {
    this.version = version;
    return this;
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductOrderRefCancel {\n");
    
    sb.append("    referredType: ").append(toIndentedString(referredType)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}


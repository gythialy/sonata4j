package io.swagger.model;

import io.swagger.annotations.ApiModel;
import io.swagger.model.ProductOrderStateType;
import java.util.Date;
import javax.validation.constraints.*;
import javax.validation.Valid;

import io.swagger.annotations.ApiModelProperty;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
  * Structure to define GET without id response. A list of productOrder matching request criteria. Provides Product order summary view.
 **/
@ApiModel(description="Structure to define GET without id response. A list of productOrder matching request criteria. Provides Product order summary view.")
public class ProductOrderSummary  {
  
  @ApiModelProperty(required = true, value = "ID given by the consumer and only understandable by him (to facilitate his searches afterwards). MEF: Buyer Purchase Order Number")
 /**
   * ID given by the consumer and only understandable by him (to facilitate his searches afterwards). MEF: Buyer Purchase Order Number
  **/
  private String externalId = null;

  @ApiModelProperty(required = true, value = "ID created on repository side (OM system) MEF: Unique identifier for the order that is generated by the Seller when the order is initially accepted via an API.")
 /**
   * ID created on repository side (OM system) MEF: Unique identifier for the order that is generated by the Seller when the order is initially accepted via an API.
  **/
  private String id = null;

  @ApiModelProperty(required = true, value = "Date when the order was created")
 /**
   * Date when the order was created
  **/
  private Date orderDate = null;

  @ApiModelProperty(required = true, value = "")
  @Valid
  private ProductOrderStateType state = null;
 /**
   * ID given by the consumer and only understandable by him (to facilitate his searches afterwards). MEF: Buyer Purchase Order Number
   * @return externalId
  **/
  @JsonProperty("externalId")
  @NotNull
  public String getExternalId() {
    return externalId;
  }

  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }

  public ProductOrderSummary externalId(String externalId) {
    this.externalId = externalId;
    return this;
  }

 /**
   * ID created on repository side (OM system) MEF: Unique identifier for the order that is generated by the Seller when the order is initially accepted via an API.
   * @return id
  **/
  @JsonProperty("id")
  @NotNull
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ProductOrderSummary id(String id) {
    this.id = id;
    return this;
  }

 /**
   * Date when the order was created
   * @return orderDate
  **/
  @JsonProperty("orderDate")
  @NotNull
  public Date getOrderDate() {
    return orderDate;
  }

  public void setOrderDate(Date orderDate) {
    this.orderDate = orderDate;
  }

  public ProductOrderSummary orderDate(Date orderDate) {
    this.orderDate = orderDate;
    return this;
  }

 /**
   * Get state
   * @return state
  **/
  @JsonProperty("state")
  @NotNull
  public ProductOrderStateType getState() {
    return state;
  }

  public void setState(ProductOrderStateType state) {
    this.state = state;
  }

  public ProductOrderSummary state(ProductOrderStateType state) {
    this.state = state;
    return this;
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductOrderSummary {\n");
    
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    orderDate: ").append(toIndentedString(orderDate)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

